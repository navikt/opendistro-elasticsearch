{{- if .Values.kibana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-kibana
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "fullname" . }}
    team: {{ .Values.odfe.env.TEAM  }}
    role: kibana
spec:
  replicas: {{ .Values.kibana.replicas }}
  selector:
    matchLabels:
      component: {{ template "fullname" . }}
      role: kibana
      team: {{ .Values.odfe.env.TEAM  }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "{{ .Values.odfe.istio.inject }}"
        traffic.sidecar.istio.io/includeInboundPorts: "*"
      labels:
        component: {{ template "fullname" . }}
        role: kibana
        team: {{ .Values.odfe.env.TEAM  }}
        app: {{ template "fullname" . }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      containers:
      - name: {{ template "fullname" . }}-kibana
        image: {{ .Values.odfe.image.repository }}-kibana:{{ .Values.odfe.image.tag }}
        imagePullPolicy: {{ .Values.odfe.image.pullPolicy }}
        env:
{{ if not .Values.odfe.security.enabled }}
        - name: opendistro_security.disabled
          value: "true"
 {{ end }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- range $key, $value :=  .Values.odfe.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.kibana.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
{{- if .Values.odfe.ssl.http.enabled }}
        - name: SERVER_SSL_ENABLED
          value: "true"
        - name: SERVER_SSL_KEY
          value: "/usr/share/kibana/config/node-key.pem"
        - name: SERVER_SSL_CERTIFICATE
          value: "/usr/share/kibana/config/node.pem"
        - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
          value: "/usr/share/kibana/config/root-ca.pem"
        - name: ELASTICSEARCH_HOSTS
          value: https://{{ template "fullname" . }}:9200
{{- else }}
        - name: ELASTICSEARCH_HOSTS
          value: http://{{ template "fullname" . }}:9200
{{- end }}
        resources:
{{ toYaml .Values.kibana.resources | indent 12 }}
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        volumeMounts:
{{- if .Values.odfe.security.enabled }}
        - mountPath: /usr/share/kibana/config/node.pem
          name: certs
          subPath: node.pem
        - mountPath: /usr/share/kibana/config/node-key.pem
          name: certs
          subPath: node-key.pem
        - mountPath: /usr/share/kibana/config/root-ca.pem
          name: certs
          subPath: root-ca.pem
        - mountPath: /usr/share/kibana/config/kibana.yml
          name: config
          subPath: kibana.yml
      volumes:
      - name: certs
        secret:
          secretName: {{ template "fullname" . }}-certs
      - name: config
        secret:
          secretName: {{ template "fullname" . }}-kibana-secrets
{{- else }}
        - mountPath: /usr/share/kibana/bin/kibana
          name: files
          subPath: kibana
        - mountPath: /usr/share/kibana/config/kibana.yml
          name: files
          subPath: kibana.yml
      volumes:
      - name: files
        secret:
          secretName: {{ template "fullname" . }}-kibana-files
          defaultMode: 0777
{{- end }}
{{- end }}
