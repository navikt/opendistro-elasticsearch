apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}-data
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: {{ template "fullname" . }}
    role: data
    team: {{ .Values.odfe.env.TEAM }}
spec:
  serviceName: {{ template "fullname" . }}-data
  replicas: {{ .Values.data.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      component: {{ template "fullname" . }}
      role: data
      team: {{ .Values.odfe.env.TEAM }}
  template:
    metadata:
      annotations:
        config.linkerd.io/skip-ports: "9300"
      labels:
        component: {{ template "fullname" . }}
        role: data
        team: {{ .Values.odfe.env.TEAM }}
        app: {{ template "fullname" . }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      initContainers:
        - name: init-mount
          command: [ 'sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data' ]
          image: busybox:1.27.2
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: storage
      # Weighted anti-affinity to disallow deploying client node to the same worker node as master node
      {{- if eq .Values.data.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: data
      {{- else if eq .Values.data.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: {{ template "fullname" . }}
                  role: data
      {{- end }}
      containers:
      - name: {{ template "fullname" . }}-data
        image: "{{ .Values.odfe.image.repository }}:{{ .Values.odfe.image.tag }}"
        imagePullPolicy: {{ .Values.odfe.image.pullPolicy }}
        env:
{{ if not .Values.odfe.security.enabled }}
        - name: opendistro_security.disabled
          value: "true"
{{ end }}
{{ if .Values.odfe.ssl.http.enabled }}
        - name: opendistro_security.ssl.http.enabled
          value: "true"
{{ end }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: discovery.seed_hosts
          value: {{ template "fullname" . }}-discovery
        {{- range $key, $value :=  .Values.odfe.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value :=  .Values.data.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        resources:
{{ toYaml .Values.data.resources | indent 10 }}
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: 60
          periodSeconds: 10
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: storage
{{- if .Values.odfe.security.enabled }}
{{ toYaml .Values.odfe.security.volumeMounts | indent 10 }}
      volumes:
        - name: certs
          secret:
            secretName: {{ template "fullname" . }}-certs
        - name: config
          secret:
            secretName: {{ template "fullname" . }}-config
{{- end }}
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: {{ .Values.odfe.stateful.class }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.data.stateful.size }}
